name: CI-build-and-push-devops-challenge

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetapi:latest, ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetapi:${{ github.run_number }}

  scan-vulnerabilities:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Scan code for vulnerabilities
        id: trivy-code-scan
        run: |
          trivy fs --severity HIGH,CRITICAL --format table --output trivy-code-report.txt .
          cat trivy-code-report.txt

      - name: Scan Docker image for vulnerabilities
        id: trivy-image-scan
        run: |
          trivy image ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetapi:latest --severity HIGH,CRITICAL --format table --output trivy-image-report.txt
          cat trivy-image-report.txt

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-scan-results
          path: |
            trivy-code-report.txt
            trivy-image-report.txt

  start-container:
    runs-on: ubuntu-latest
    needs: scan-vulnerabilities

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Pull Docker image if not available locally
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetapi:latest

      - name: Start Docker container
        run: |
          docker run -d --name devops-challenge-container -p 8080:80 ${{ secrets.DOCKERHUB_USERNAME }}/dockerfordotnetapi:latest

  run-tests:
    runs-on: ubuntu-latest
    needs: start-container

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Restore dependencies
        run: dotnet restore src/DevOpsChallenge.SalesApi/DevOpsChallenge.SalesApi.csproj

      - name: Build
        run: dotnet build src/DevOpsChallenge.SalesApi/DevOpsChallenge.SalesApi.csproj --no-restore

      - name: Business Test
        run: dotnet test tests/DevOpsChallenge.SalesApi.Business.UnitTests/DevOpsChallenge.SalesApi.Business.UnitTests.csproj --no-build --verbosity normal

      - name: Integration Test
        run: dotnet test tests/DevOpsChallenge.SalesApi.IntegrationTests/DevOpsChallenge.SalesApi.IntegrationTests.csproj --no-build --verbosity normal

      - name: Stop Docker container
        run: docker stop devops-challenge-container
